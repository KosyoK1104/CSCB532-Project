worker_processes auto;
error_log /proc/self/fd/2 warn;
#pid /run/nginx.pid;
pid /tmp/nginx.pid;
user www-data www-data;

events {
    worker_connections 1024;
}

http {
    server_tokens off;
    port_in_redirect off;

    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    # access_log /dev/stdout main_timed;
    # error_log /dev/stderr notice;
    access_log /proc/self/fd/2 main_timed;
    error_log /proc/self/fd/2 notice;

    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    client_max_body_size 1M;

    # Conditionally add a default CSP
    map $upstream_http_content_security_policy $csp {
        "" "default-src 'self' 'unsafe-inline'";
    }
    # Conditionally add a default Permissions Policy
    map $upstream_http_permissions_policy $permissions_policy {
        "" "geolocation=(self), speaker=(self), microphone=(none), midi=(none), fullscreen=(self), camera=(none), gyroscope=(self), magnetometer=(self), payment=(none)";
    }

    # Conditionally add a default Refferer Policy
    map $upstream_http_referrer_policy $referrer_policy {
        "" "same-origin";
    }

    server{
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name localhost;

        #ssl_certificate /opt/sdi/nginx/certificates/server.crt;
        #ssl_certificate_key /opt/sdi/nginx/certificates/server.key;
        #ssl_password_file /opt/sdi/nginx/ssl_passwords;
        #ssl_client_certificate /opt/sdi/nginx/certificates/ca-bundle.crt;
        #ssl_verify_depth 2;
        #ssl_verify_client on;
        #ssl_protocols TLSv1.2 TLSv1.3;
        #s#sl_prefer_server_ciphers on;

        root /var/www/public;
        index index.php index.html;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            try_files $uri =404;

            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass 127.0.0.1:9000;
            # fastcgi_pass unix:/tmp/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;

            # FastCGI SSL Params
            #fastcgi_param   HTTPS                         $https if_not_empty;
            #fastcgi_param   SSL_VERIFIED                  $ssl_client_verify if_not_empty;
            #fastcgi_param   SSL_CLIENT_SERIAL             $ssl_client_serial if_not_empty;
            #fastcgi_param   SSL_CLIENT_S_DN               $ssl_client_s_dn if_not_empty;
            #fastcgi_param   SSL_CLIENT_I_DN               $ssl_client_i_dn if_not_empty;
            #fastcgi_param   SSL_CLIENT_RAW_CERT           $ssl_client_raw_cert if_not_empty;
            #fastcgi_param   SSL_PROTOCOL                  $ssl_protocol if_not_empty;
            #fastcgi_param   SSL_CIPHER                    $ssl_cipher if_not_empty;
            #fastcgi_param   SSL_SESSION_ID                $ssl_session_id if_not_empty;
            #fastcgi_param   SSL_CLIENT_SERIAL             $ssl_client_serial if_not_empty;

            # fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|woff|woff2|ttf|svg)$ {
            expires -1;
            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Methods "OPTIONS, GET";
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # Redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /var/lib/nginx/html;
        }
    }

    # Default server definition
    #server {
        # Needs ngx_headers_more
        # https://github.com/openresty/headers-more-nginx-module#name
        # more_clear_headers Server;

        # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#using-a-hostname-to-resolve-addresses
        #listen [::]:8080 default_server;
        #listen 8080 default_server;
        #server_name _;

        # sendfile off;

        #root /var/www/public;
        #index index.php index.html;

        #location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            #try_files $uri $uri/ /index.php$is_args$args;
        #}

        # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
        # https://nealpoole.com/blog/2011/04/setting-up-php-fastcgi-and-nginx-dont-trust-the-tutorials-check-your-configuration/

        # Passing Uncontrolled Requests to PHP
        # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
        # Passing every URI ending in .php to the PHP interpreter presents a serious security issue
        # on most PHP setups as it may allow arbitrary code execution by third parties.

        # For front controller
        #location ~ ^/index\.php(/|$) {
        #   try_files $uri =404;
        #
        #   fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #   fastcgi_pass 127.0.0.1:9000;
        #   fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #   fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        #   fastcgi_param front_controller_active true;
        #   fastcgi_index index.php;
        #   include fastcgi_params;
        #
        #    # Prevents URIs that include the front controller. This will 404:
        #    # http://domain.tld/app.php/some-path
        #    # Remove the internal directive to allow URIs like this
        #    internal;
        #}

        #location ~ \.php$ {
            # Zero-day exploit defense.
            # http://forum.nginx.org/read.php?2,88845,page=3
            # Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
            # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
            #try_files $uri =404;

            #fastcgi_split_path_info ^(.+\.php)(/.+)$;
            #fastcgi_pass 127.0.0.1:9000;
            # fastcgi_pass unix:/tmp/php-fpm.sock;
            #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            # fastcgi_intercept_errors on;
            #fastcgi_request_buffering off;
            #fastcgi_index index.php;
            #include fastcgi_params;
        #}


        # Deny access to . files, for security
        #location ~ /\. {
        #    log_not_found off;
        #    deny all;
        #}

        # Allow fpm ping and status from localhost
        #location ~ ^/(fpm-status|fpm-ping)$ {
        #    access_log off;
        #    allow 127.0.0.1;
        #    deny all;
        #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #    include fastcgi_params;
        #    fastcgi_pass 127.0.0.1:9000;
        #}

        # Redirect server error pages to the static page /50x.html
        #error_page 500 502 503 504 /50x.html;

        #location = /50x.html {
        #    root /var/lib/nginx/html;
        #}
    #}

    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/javascript application/json application/xml+rss image/svg+xml;
    gzip_vary on;
    gzip_disable "msie6";

    # Security headers
    # Generate CSP here https://report-uri.com/home/generate

    add_header Server "" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy $referrer_policy;
    add_header Expect-CT "max-age=0";
    add_header Permissions-Policy $permissions_policy;

    # add_header Content-Security-Policy $csp always;

    # Include other server configs
    # include /etc/nginx/conf.d/*.conf;
}